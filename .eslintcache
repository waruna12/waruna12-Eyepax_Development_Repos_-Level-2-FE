[{"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\index.js":"1","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\App.js":"2","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\store\\auth-context.js":"3","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\AuthPage.js":"4","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\ClientPage.js":"5","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\HomePage.js":"6","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\CalenderPage.js":"7","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\ReservationPage.js":"8","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Layout\\Layout.js":"9","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Profile\\UserProfile.js":"10","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Profile\\ProfileForm.js":"11","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Layout\\MainNavigation.js":"12","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Auth\\AuthForm.js":"13","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\ClientPageContent.js":"14","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\StartingPageContent.js":"15","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Calender\\CalenderContent.js":"16","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\ReservationPageContent.js":"17","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\data.js":"18","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\PieChart.js":"19","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\ClientTable.js":"20","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\AddClientModel.js":"21","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\BarChartContent.js":"22","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\InviteNewUser.js":"23","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\Slide.js":"24","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\AddReservation.js":"25","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\ReservationTable.js":"26","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\AuthService.js":"27","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\UpdateClient.js":"28","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\DeleteClient.js":"29","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\ClientService.js":"30","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\ReservationService.js":"31","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\DeleteReservation.js":"32","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\UpdateReservation.js":"33","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\config\\constants.js":"34","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\UserService.js":"35","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\index.js":"36","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\App.js":"37","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\store\\auth-context.js":"38","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\ReservationPage.js":"39","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\AuthPage.js":"40","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\ClientPage.js":"41","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\HomePage.js":"42","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\CalenderPage.js":"43","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Layout\\Layout.js":"44","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Profile\\UserProfile.js":"45","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Layout\\MainNavigation.js":"46","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Profile\\ProfileForm.js":"47","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\ReservationPageContent.js":"48","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\ClientPageContent.js":"49","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Calender\\CalenderContent.js":"50","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Auth\\AuthForm.js":"51","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\StartingPageContent.js":"52","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\ReservationTable.js":"53","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\AddReservation.js":"54","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\ClientTable.js":"55","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\data.js":"56","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\AddClientModel.js":"57","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\InviteNewUser.js":"58","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\PieChart.js":"59","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\Slide.js":"60","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\BarChartContent.js":"61","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\AuthService.js":"62","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\ReservationService.js":"63","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\UpdateReservation.js":"64","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\DeleteReservation.js":"65","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\ClientService.js":"66","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\UserService.js":"67","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\UpdateClient.js":"68","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\DeleteClient.js":"69","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\config\\constants.js":"70","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\store\\client-context.js":"71","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\store\\reservation-context.js":"72","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Auth\\SignUp.js":"73","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\store\\reservation-context.js":"74","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\store\\client-context.js":"75","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Auth\\SignUp.js":"76","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Calender\\CalenderDragDrop.js":"77"},{"size":622,"mtime":1662831857304,"results":"78","hashOfConfig":"79"},{"size":1673,"mtime":1662958788957,"results":"80","hashOfConfig":"79"},{"size":958,"mtime":1662547056953,"results":"81","hashOfConfig":"79"},{"size":130,"mtime":1648643396000,"results":"82","hashOfConfig":"79"},{"size":174,"mtime":1658806940240,"results":"83","hashOfConfig":"79"},{"size":171,"mtime":1648643396000,"results":"84","hashOfConfig":"79"},{"size":277,"mtime":1663048042391,"results":"85","hashOfConfig":"79"},{"size":200,"mtime":1658834079878,"results":"86","hashOfConfig":"79"},{"size":246,"mtime":1648643396000,"results":"87","hashOfConfig":"79"},{"size":278,"mtime":1648643396000,"results":"88","hashOfConfig":"79"},{"size":755,"mtime":1659093126260,"results":"89","hashOfConfig":"79"},{"size":1103,"mtime":1662977209080,"results":"90","hashOfConfig":"79"},{"size":2640,"mtime":1662978292545,"results":"91","hashOfConfig":"79"},{"size":733,"mtime":1662828802467,"results":"92","hashOfConfig":"79"},{"size":1137,"mtime":1662831668431,"results":"93","hashOfConfig":"79"},{"size":1682,"mtime":1663049043337,"results":"94","hashOfConfig":"79"},{"size":812,"mtime":1662830578637,"results":"95","hashOfConfig":"79"},{"size":2145,"mtime":1663048415028,"results":"96","hashOfConfig":"79"},{"size":2387,"mtime":1662831582423,"results":"97","hashOfConfig":"79"},{"size":2608,"mtime":1662828874716,"results":"98","hashOfConfig":"79"},{"size":5869,"mtime":1662828732830,"results":"99","hashOfConfig":"79"},{"size":1807,"mtime":1662831545891,"results":"100","hashOfConfig":"79"},{"size":2610,"mtime":1662977344817,"results":"101","hashOfConfig":"79"},{"size":2867,"mtime":1662831897917,"results":"102","hashOfConfig":"79"},{"size":9425,"mtime":1663060425965,"results":"103","hashOfConfig":"79"},{"size":4040,"mtime":1662831417827,"results":"104","hashOfConfig":"79"},{"size":1744,"mtime":1662968612705,"results":"105","hashOfConfig":"79"},{"size":6352,"mtime":1662877186232,"results":"106","hashOfConfig":"79"},{"size":2577,"mtime":1662821038950,"results":"107","hashOfConfig":"79"},{"size":3501,"mtime":1662614156925,"results":"108","hashOfConfig":"79"},{"size":5181,"mtime":1662721272625,"results":"109","hashOfConfig":"79"},{"size":2615,"mtime":1662820729590,"results":"110","hashOfConfig":"79"},{"size":10623,"mtime":1662874524707,"results":"111","hashOfConfig":"79"},{"size":56,"mtime":1658906277807,"results":"112","hashOfConfig":"79"},{"size":1151,"mtime":1662967745839,"results":"113","hashOfConfig":"79"},{"size":622,"mtime":1662831857304,"results":"114","hashOfConfig":"115"},{"size":1673,"mtime":1662958788957,"results":"116","hashOfConfig":"115"},{"size":958,"mtime":1662547056953,"results":"117","hashOfConfig":"115"},{"size":200,"mtime":1658834079878,"results":"118","hashOfConfig":"115"},{"size":130,"mtime":1648643396000,"results":"119","hashOfConfig":"115"},{"size":174,"mtime":1658806940240,"results":"120","hashOfConfig":"115"},{"size":171,"mtime":1648643396000,"results":"121","hashOfConfig":"115"},{"size":170,"mtime":1658851812231,"results":"122","hashOfConfig":"115"},{"size":246,"mtime":1648643396000,"results":"123","hashOfConfig":"115"},{"size":278,"mtime":1648643396000,"results":"124","hashOfConfig":"115"},{"size":1103,"mtime":1662977209080,"results":"125","hashOfConfig":"115"},{"size":755,"mtime":1659093126260,"results":"126","hashOfConfig":"115"},{"size":812,"mtime":1662830578637,"results":"127","hashOfConfig":"115"},{"size":733,"mtime":1662828802467,"results":"128","hashOfConfig":"115"},{"size":1682,"mtime":1662976443220,"results":"129","hashOfConfig":"115"},{"size":2640,"mtime":1662978292545,"results":"130","hashOfConfig":"115"},{"size":1137,"mtime":1662831668431,"results":"131","hashOfConfig":"115"},{"size":4040,"mtime":1662831417827,"results":"132","hashOfConfig":"115"},{"size":9425,"mtime":1662874275661,"results":"133","hashOfConfig":"115"},{"size":2608,"mtime":1662828874716,"results":"134","hashOfConfig":"115"},{"size":2189,"mtime":1662703726857,"results":"135","hashOfConfig":"115"},{"size":5869,"mtime":1662828732830,"results":"136","hashOfConfig":"115"},{"size":2610,"mtime":1662977344817,"results":"137","hashOfConfig":"115"},{"size":2387,"mtime":1662831582423,"results":"138","hashOfConfig":"115"},{"size":2867,"mtime":1662831897917,"results":"139","hashOfConfig":"115"},{"size":1807,"mtime":1662831545891,"results":"140","hashOfConfig":"115"},{"size":1744,"mtime":1662968612705,"results":"141","hashOfConfig":"115"},{"size":5181,"mtime":1662721272625,"results":"142","hashOfConfig":"115"},{"size":10623,"mtime":1662874524707,"results":"143","hashOfConfig":"115"},{"size":2615,"mtime":1662820729590,"results":"144","hashOfConfig":"115"},{"size":3501,"mtime":1662614156925,"results":"145","hashOfConfig":"115"},{"size":1151,"mtime":1662967745839,"results":"146","hashOfConfig":"115"},{"size":6352,"mtime":1662877186232,"results":"147","hashOfConfig":"115"},{"size":2577,"mtime":1662821038950,"results":"148","hashOfConfig":"115"},{"size":56,"mtime":1658906277807,"results":"149","hashOfConfig":"115"},{"size":375,"mtime":1662831708487,"results":"150","hashOfConfig":"115"},{"size":425,"mtime":1662831720456,"results":"151","hashOfConfig":"115"},{"size":2628,"mtime":1662965849648,"results":"152","hashOfConfig":"115"},{"size":425,"mtime":1662831720456,"results":"153","hashOfConfig":"79"},{"size":375,"mtime":1662831708487,"results":"154","hashOfConfig":"79"},{"size":2628,"mtime":1662965849648,"results":"155","hashOfConfig":"79"},{"size":3772,"mtime":1663065834294,"results":"156","hashOfConfig":"79"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k1wi1l",{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},"wgt8vx",{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"253","messages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"255","messages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"257","messages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"230"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"230"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"230"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"230"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"230"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"286","messages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"288","messages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"230"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"230"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"230"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\index.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\App.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\store\\auth-context.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\AuthPage.js",[],["322","323"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\ClientPage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\HomePage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\CalenderPage.js",["324"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\pages\\ReservationPage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Layout\\Layout.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Profile\\UserProfile.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Profile\\ProfileForm.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Layout\\MainNavigation.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Auth\\AuthForm.js",["325"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\ClientPageContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\StartingPageContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Calender\\CalenderContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\ReservationPageContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\data.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\PieChart.js",["326","327","328"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\ClientTable.js",["329"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\AddClientModel.js",["330","331","332"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\BarChartContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\InviteNewUser.js",["333"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\StartingPage\\Slide.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\AddReservation.js",["334","335","336","337","338"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\ReservationTable.js",["339"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\AuthService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\UpdateClient.js",["340","341"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\ClientPage\\DeleteClient.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\ClientService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\ReservationService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\DeleteReservation.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Reservation\\UpdateReservation.js",["342","343"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\config\\constants.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\services\\UserService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\index.js",[],["344","345"],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\App.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\store\\auth-context.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\ReservationPage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\AuthPage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\ClientPage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\HomePage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\pages\\CalenderPage.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Layout\\Layout.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Profile\\UserProfile.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Layout\\MainNavigation.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Profile\\ProfileForm.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\ReservationPageContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\ClientPageContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Calender\\CalenderContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Auth\\AuthForm.js",["346"],"import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthContext from \"../../store/auth-context\";\nimport classes from \"./AuthForm.module.css\";\nimport { UserService } from \"./../../services/AuthService\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nconst AuthForm = () => {\n  const history = useHistory();\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const authCtx = useContext(AuthContext);\n\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  // const switchAuthModeHandler = () => {\n  //   setIsLogin((prevState) => !prevState);\n  // };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    if (isLogin) {\n      const enteredEmail = emailInputRef.current.value;\n      const enteredPassword = passwordInputRef.current.value;\n\n      try {\n        const response = await UserService.userLogin(\n          enteredEmail,\n          enteredPassword\n        );\n\n        authCtx.login(response.token);\n        setIsLoading(false);\n        history.replace(\"/\");\n        // document.getElementById(\"create_client\").reset();\n      } catch (err) {\n        setIsLoading(false);\n        NotificationManager.error(\n          \"User Login Faield\",\n          \"error\",\n          \"Close after 25000ms\",\n          45000\n        );\n      }\n    } else {\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Loading...</p>}\n          {/* <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button> */}\n        </div>\n      </form>\n      <NotificationContainer />\n    </section>\n  );\n};\n\nexport default AuthForm;\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\StartingPageContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\ReservationTable.js",["347"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport DeleteReservation from \"./DeleteReservation\";\r\nimport UpdateReservation from \"./UpdateReservation\";\r\n// import { status } from \"./../../data\";\r\nimport { ReservationService } from \"./../../services/ReservationService\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { ReservationContext } from \"./../../store/reservation-context\";\r\n\r\nconst ReservationTable = () => {\r\n  const [reservation, setReservationContext] = useContext(ReservationContext);\r\n  const [reservationId, setReservationId] = useState(\"\");\r\n  // const [reservation_state, setReservation] = useState(\"\");\r\n  const [reservationUpdate, setReservationUpdate] = useState(false);\r\n\r\n  const newArray = reservation.map((u) => {\r\n    return {\r\n      ...u,\r\n\r\n      id: u._id,\r\n    };\r\n  });\r\n\r\n  const ReservationDetails = async () => {\r\n    try {\r\n      const result = await ReservationService.reservationDetails();\r\n      setReservationContext(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    ReservationDetails();\r\n    setReservationUpdate(false);\r\n  }, [reservationUpdate]);\r\n\r\n  const onClick = () => {\r\n    ReservationDetails();\r\n  };\r\n\r\n  const columns = [\r\n    { field: \"client_email\", headerName: \"Client\", width: 180 },\r\n    { field: \"service_type\", headerName: \"Service Type\", width: 150 },\r\n    { field: \"stylist_email\", headerName: \"Stylist\", width: 170 },\r\n    { field: \"reservation_date\", headerName: \"Date\", width: 120 },\r\n    { field: \"reservation_time\", headerName: \"Time\", width: 100 },\r\n    { field: \"reservation_status\", headerName: \"Status\", width: 100 },\r\n    // {\r\n    //   field: \"reservation_status\",\r\n    //   headerName: \"Status\",\r\n    //   width: 130,\r\n    //   sortable: false,\r\n    //   renderCell: (params) => {\r\n    //     return (\r\n    //       <div\r\n    //         onClick={() => {\r\n    //           setReservationId(params.row.id);\r\n    //         }}\r\n    //       >\r\n    //         <select\r\n    //           name=\"\"\r\n    //           required\r\n    //           value={params.row.reservation_status}\r\n    //           onChange={(e) => {\r\n    //             setReservation(e.target.value);\r\n    //           }}\r\n    //         >\r\n    //           <option value={\"\"}>select</option>\r\n\r\n    //           {status.map((sta, index) => {\r\n    //             return (\r\n    //               <option key={sta.id} value={sta.title}>\r\n    //                 {sta.title}\r\n    //               </option>\r\n    //             );\r\n    //           })}\r\n    //         </select>\r\n    //       </div>\r\n    //     );\r\n    //   },\r\n    // },\r\n    {\r\n      field: \"Edit\",\r\n      headerName: \"Edit\",\r\n      width: 100,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              setReservationId(params.row.id);\r\n            }}\r\n          >\r\n            <UpdateReservation\r\n              reservationId={reservationId}\r\n              onUpdateReservationData={setReservationUpdate}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      headerName: \"Delete\",\r\n      width: 100,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              setReservationId(params.row.id);\r\n            }}\r\n          >\r\n            <DeleteReservation\r\n              reservationId={reservationId}\r\n              onClick={onClick}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Row\r\n        style={{\r\n          height: \"50vh\",\r\n          width: \"100%\",\r\n          marginTop: \"2vh\",\r\n        }}\r\n      >\r\n        <DataGrid rows={newArray} columns={columns} />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ReservationTable;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\AddReservation.js",["348","349","350","351","352"],"import React, { useRef, useEffect, useState, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport classes from \"./AddReservation.module.css\";\r\nimport { service_type, timeArray } from \"./../../data\";\r\nimport { ReservationService } from \"./../../services/ReservationService\";\r\nimport { ClientService } from \"./../../services/ClientService\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { UserService } from \"./../../services/UserService\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { ReservationContext } from \"./../../store/reservation-context\";\r\nimport moment from \"moment\";\r\n\r\nconst AddReservationModel = () => {\r\n  var dt = new Date();\r\n  dt.setDate(dt.getDate() - 0);\r\n\r\n  const format1 = \"YYYY-MM-DD\";\r\n\r\n  const [reservation, setReservationContext] = useContext(ReservationContext);\r\n\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const [onChangeDate, setChangeDate] = useState(\"\");\r\n  const [onChangeTime, setChangeTime] = useState(\"\");\r\n\r\n  const [users, setUser] = useState([]);\r\n  const [availablestylist, setAvailableStylist] = useState([]);\r\n\r\n  const [reservationsearchvalue, setReservationSearchValue] = useState(\"\");\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const clientInputRef = useRef();\r\n  const serviceTypeInputRef = useRef();\r\n  const stylistInputRef = useRef();\r\n  const reservationDateInputRef = useRef();\r\n  const reservationTimeInputRef = useRef();\r\n\r\n  const onSubmitForm = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredClient = clientInputRef.current.value;\r\n    const enteredService = serviceTypeInputRef.current.value;\r\n    const enteredStylist = stylistInputRef.current.value;\r\n    const enteredDate = reservationDateInputRef.current.value;\r\n    const enteredTime = reservationTimeInputRef.current.value;\r\n\r\n    try {\r\n      const response = await ReservationService.reservationCreate(\r\n        enteredClient,\r\n        enteredService,\r\n        enteredStylist,\r\n        enteredDate,\r\n        enteredTime\r\n      );\r\n\r\n      ReservationDetails();\r\n      NotificationManager.success(\r\n        \"Reservation Success Added\",\r\n        \"Success\",\r\n        \"Close after 15000ms\",\r\n        15000\r\n      );\r\n      handleClose();\r\n    } catch (err) {\r\n      NotificationManager.error(\r\n        \"Reservation Added Failed\",\r\n        \"error\",\r\n        \"Close after 15000ms\",\r\n        15000\r\n      );\r\n    }\r\n  };\r\n\r\n  const ClientDetails = async () => {\r\n    try {\r\n      const result = await ClientService.clientDetails();\r\n\r\n      setClients(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const UserDetails = async () => {\r\n    try {\r\n      const result = await UserService.userDetails();\r\n\r\n      setUser(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const AvailableStylsitDetails = async () => {\r\n    try {\r\n      const result = await ReservationService.reservationStylistSearch(\r\n        onChangeDate,\r\n        onChangeTime\r\n      );\r\n\r\n      setAvailableStylist(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onChangeDate && onChangeTime) {\r\n      AvailableStylsitDetails();\r\n    }\r\n  }, [onChangeDate, onChangeTime]);\r\n\r\n  const ReservationDetailSearch = async () => {\r\n    try {\r\n      const result = await ReservationService.reservationSearch(\r\n        reservationsearchvalue\r\n      );\r\n\r\n      setReservationContext(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const ReservationDetails = async () => {\r\n    try {\r\n      const result = await ReservationService.reservationDetails();\r\n\r\n      setReservationContext(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (reservationsearchvalue.length > 0) {\r\n      ReservationDetailSearch();\r\n    } else {\r\n    }\r\n  }, [reservationsearchvalue]);\r\n\r\n  useEffect(() => {\r\n    ClientDetails();\r\n    UserDetails();\r\n  }, []);\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Row>\r\n        <Col sm={4}>\r\n          <InputGroup className=\"mb-3\">\r\n            <Form.Control\r\n              placeholder=\"Search here\"\r\n              aria-label=\"Search here\"\r\n              aria-describedby=\"basic-addon2\"\r\n              onChange={(e) => {\r\n                setReservationSearchValue(e.target.value);\r\n\r\n                if (e.target.value === \"\") {\r\n                  ReservationDetails();\r\n                }\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col sm={8} style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n          <button onClick={handleOpen} className={classes.button}>\r\n            Add New\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box className={classes.auth}>\r\n              <Typography\r\n                id=\"modal-modal-title\"\r\n                variant=\"h6\"\r\n                component=\"h2\"\r\n                textAlign=\"center\"\r\n              >\r\n                Add New Reservation\r\n              </Typography>\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                <section>\r\n                  <form onSubmit={onSubmitForm}>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"email\">Client</label>\r\n                      <select name=\"client\" required ref={clientInputRef}>\r\n                        <option value=\"\">Select Client </option>\r\n                        {clients.map((cli, index) => {\r\n                          return (\r\n                            <option key={cli.id} value={cli.email}>\r\n                              {cli.email}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"password\">Service Type</label>\r\n                      <select\r\n                        name=\"serviceType\"\r\n                        required\r\n                        ref={serviceTypeInputRef}\r\n                      >\r\n                        <option value=\"\">Select Service Type</option>\r\n                        {service_type.map((service, index) => {\r\n                          return (\r\n                            <option key={service.id} value={service.title}>\r\n                              {service.title}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"date\">Select Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        min={moment(dt).format(format1)}\r\n                        max=\"2024-09-09\"\r\n                        id=\"password\"\r\n                        required\r\n                        ref={reservationDateInputRef}\r\n                        onChange={(e) => {\r\n                          setChangeDate(e.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"password\">Select Time</label>\r\n                      <select\r\n                        name=\"time\"\r\n                        required\r\n                        ref={reservationTimeInputRef}\r\n                        onChange={(e) => {\r\n                          setChangeTime(e.target.value);\r\n                        }}\r\n                      >\r\n                        <option value=\"\">Select Time</option>\r\n                        {timeArray.map((time, index) => {\r\n                          return (\r\n                            <option key={time.id} value={time.time}>\r\n                              {time.time}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"password\">Stylist</label>\r\n                      <select name=\"stylist\" required ref={stylistInputRef}>\r\n                        <option value=\"\">Select Stylist</option>\r\n                        {availablestylist.map((x) => {\r\n                          return (\r\n                            <option key={x} value={x}>\r\n                              {x}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className={classes.actions}>\r\n                      <button>Reservation</button>\r\n                    </div>\r\n                  </form>\r\n                </section>\r\n              </Typography>\r\n            </Box>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddReservationModel;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\ClientTable.js",["353"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport DeleteClient from \"./DeleteClient\";\r\nimport UpdateClient from \"./UpdateClient\";\r\nimport { ClientService } from \"./../../services/ClientService\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { ClientContext } from \"./../../store/client-context\";\r\n\r\nconst ClientTable = () => {\r\n  const [clients, setClients] = useContext(ClientContext);\r\n  const [clientUpdate, setClientUpdate] = useState(false);\r\n  const [clientId, setClientId] = useState(\"\");\r\n  const [clientEmail, setClientEmail] = useState(\"\");\r\n\r\n  const newArray = clients.map((u) => {\r\n    return {\r\n      ...u,\r\n\r\n      id: u._id,\r\n    };\r\n  });\r\n\r\n  const ClientDetails = async () => {\r\n    try {\r\n      const result = await ClientService.clientDetails();\r\n      setClients(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const onClick = () => {\r\n    ClientDetails();\r\n  };\r\n\r\n  useEffect(() => {\r\n    ClientDetails();\r\n  }, [clientUpdate]);\r\n\r\n  const columns = [\r\n    { field: \"fname\", headerName: \"First Name\", width: 150 },\r\n    { field: \"lname\", headerName: \"Last Name\", width: 150 },\r\n    { field: \"phone_number\", headerName: \"Phone Number\", width: 150 },\r\n    { field: \"email\", headerName: \"Email\", width: 200 },\r\n    {\r\n      field: \"Edit\",\r\n      headerName: \"Edit\",\r\n      width: 150,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              setClientId(params.row.id);\r\n            }}\r\n          >\r\n            <UpdateClient\r\n              clientId={clientId}\r\n              onUpdateClientData={setClientUpdate}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"Delete\",\r\n      headerName: \"Delete\",\r\n      width: 150,\r\n      sortable: false,\r\n      renderCell: (params) => {\r\n        return (\r\n          <div\r\n            onClick={() => {\r\n              setClientId(params.row.id);\r\n              setClientEmail(params.row.email);\r\n            }}\r\n          >\r\n            <DeleteClient\r\n              clientId={clientId}\r\n              clientEmail={clientEmail}\r\n              onClick={onClick}\r\n            />\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <Row style={{ height: \"50vh\", width: \"100%\", marginTop: \"2vh\" }}>\r\n        <DataGrid rows={newArray} columns={columns} />\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ClientTable;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\data.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\AddClientModel.js",["354","355","356"],"import React, { useRef, useState, useEffect, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport classes from \"./AddClient.module.css\";\r\nimport { ClientService } from \"./../../services/ClientService\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport { ClientContext } from \"./../../store/client-context\";\r\n\r\nconst AddClientModel = () => {\r\n  const [clients, setClients] = useContext(ClientContext);\r\n\r\n  const [searchvalue, setSearchValue] = useState(\"\");\r\n\r\n  const emailInputRef = useRef();\r\n  const fnameInputRef = useRef();\r\n  const lnameInputRef = useRef();\r\n  const phoneNumberInputRef = useRef();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n    const enteredFname = fnameInputRef.current.value;\r\n    const enteredLname = lnameInputRef.current.value;\r\n    const enteredPhonenumber = phoneNumberInputRef.current.value;\r\n\r\n    try {\r\n      const response = await ClientService.clientCreate(\r\n        enteredEmail,\r\n        enteredFname,\r\n        enteredLname,\r\n        enteredPhonenumber\r\n      );\r\n\r\n      ClientDetails();\r\n      NotificationManager.success(\r\n        \"Client Success Added\",\r\n        \"Success\",\r\n        \"Close after 25000ms\",\r\n        25000\r\n      );\r\n      document.getElementById(\"create_client\").reset();\r\n      handleClose();\r\n    } catch (err) {\r\n      NotificationManager.error(\r\n        \"Email alredy registered\",\r\n        \"error\",\r\n        \"Close after 25000ms\",\r\n        25000\r\n      );\r\n    }\r\n  };\r\n\r\n  const ClientDetailSearch = async () => {\r\n    try {\r\n      const result = await ClientService.clientSearch(searchvalue);\r\n      setClients(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (searchvalue.length > 0) {\r\n      ClientDetailSearch();\r\n    } else {\r\n    }\r\n  }, [searchvalue]);\r\n\r\n  const ClientDetails = async () => {\r\n    try {\r\n      const result = await ClientService.clientDetails();\r\n      setClients(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-3\">\r\n        <Col sm={4}>\r\n          <InputGroup className=\"mb-3\">\r\n            <Form.Control\r\n              placeholder=\"Search here\"\r\n              aria-label=\"Search here\"\r\n              aria-describedby=\"basic-addon2\"\r\n              onChange={(e) => {\r\n                setSearchValue(e.target.value);\r\n                if (e.target.value === \"\") {\r\n                  ClientDetails();\r\n                }\r\n              }}\r\n            />\r\n          </InputGroup>\r\n        </Col>\r\n        <Col sm={8} style={{ display: \"flex\", justifyContent: \"end\" }}>\r\n          {\" \"}\r\n          <button onClick={handleOpen} className={classes.button}>\r\n            Add New\r\n          </button>\r\n          <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box className={classes.auth}>\r\n              <Typography\r\n                id=\"modal-modal-title\"\r\n                variant=\"h6\"\r\n                component=\"h2\"\r\n                textAlign=\"center\"\r\n              >\r\n                Add New Client\r\n              </Typography>\r\n              <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n                <section>\r\n                  <form onSubmit={submitHandler} id=\"create_client\">\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        required\r\n                        ref={emailInputRef}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">First Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"name\"\r\n                        required\r\n                        ref={fnameInputRef}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Last Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"text\"\r\n                        name=\"lname\"\r\n                        required\r\n                        ref={lnameInputRef}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"phone\">Phone Number</label>\r\n                      <input\r\n                        type=\"phone\"\r\n                        id=\"phone\"\r\n                        name=\"phone\"\r\n                        required\r\n                        ref={phoneNumberInputRef}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className={classes.actions}>\r\n                      <button>Add New</button>\r\n                    </div>\r\n                  </form>\r\n                </section>\r\n              </Typography>\r\n            </Box>\r\n          </Modal>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AddClientModel;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\InviteNewUser.js",["357"],"import React, { useRef } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport classes from \"./InviteNewUser.module.css\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { UserService } from \"./../../services/UserService\";\r\n\r\nconst InviteNewUser = () => {\r\n  const emailInputRef = useRef();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredEmail = emailInputRef.current.value;\r\n\r\n    try {\r\n      const response = await UserService.inviteUser(enteredEmail);\r\n\r\n      NotificationManager.success(\r\n        \"Send Email Success\",\r\n        \"Success\",\r\n        \"Close after 35000ms\",\r\n        35000\r\n      );\r\n      document.getElementById(\"invite_user\").reset();\r\n      handleClose();\r\n    } catch (err) {\r\n      NotificationManager.error(\r\n        \"Alredy Invite User\",\r\n        \"error\",\r\n        \"Close after 25000ms\",\r\n        25000\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <button onClick={handleOpen} className={classes.button}>\r\n        Invite New User\r\n      </button>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box className={classes.auth}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n            textAlign=\"center\"\r\n          >\r\n            Invite User\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <section>\r\n              <form onSubmit={submitHandler} id=\"invite_user\">\r\n                <div className={classes.control}>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    required\r\n                    name=\"email\"\r\n                    ref={emailInputRef}\r\n                  />\r\n                </div>\r\n                <div className={classes.actions}>\r\n                  <button>Invite</button>\r\n                </div>\r\n              </form>\r\n            </section>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InviteNewUser;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\PieChart.js",["358","359","360"],"import React, { useEffect, useState } from \"react\";\r\nimport { PieChart, Pie, Tooltip } from \"recharts\";\r\nimport { ReservationService } from \"./../../services/ReservationService\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nconst PieChartContent = (props) => {\r\n  const [row, setRow] = useState([]);\r\n\r\n  const newArray = row.map((u) => {\r\n    return {\r\n      ...u,\r\n      name: u.service_type,\r\n      value: 1000,\r\n    };\r\n  });\r\n\r\n  const completeReservation = async () => {\r\n    try {\r\n      const result = await ReservationService.completeReservation();\r\n\r\n      setRow(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    completeReservation();\r\n  }, []);\r\n\r\n  var hairCount = 0;\r\n  var makeUpCount = 0;\r\n  var facialCount = 0;\r\n\r\n  for (var i = 0; i < newArray.length; ++i) {\r\n    if (newArray[i].service_type == \"HairCut\") {\r\n      hairCount++;\r\n    } else if (newArray[i].service_type == \"MakeUp\") {\r\n      makeUpCount++;\r\n    } else if (newArray[i].service_type == \"Facial\") {\r\n      facialCount++;\r\n    }\r\n  }\r\n\r\n  // My object\r\n  const hair = {\r\n    label: \"HairCut\",\r\n    value: hairCount,\r\n  };\r\n\r\n  const makeup = {\r\n    label: \"MakeUp\",\r\n    value: makeUpCount,\r\n  };\r\n\r\n  const facial = {\r\n    label: \"Facial\",\r\n    value: facialCount,\r\n  };\r\n\r\n  var nietos = [];\r\n  var hairObj = {};\r\n  var makeObj = {};\r\n  var facialObj = {};\r\n\r\n  hairObj[\"name\"] = hair.label;\r\n  hairObj[\"value\"] = hair.value;\r\n\r\n  makeObj[\"name\"] = makeup.label;\r\n  makeObj[\"value\"] = makeup.value;\r\n\r\n  facialObj[\"name\"] = facial.label;\r\n  facialObj[\"value\"] = facial.value;\r\n\r\n  nietos.push(hairObj);\r\n  nietos.push(makeObj);\r\n  nietos.push(facialObj);\r\n\r\n  return (\r\n    <Container>\r\n      <Row style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <PieChart width={400} height={400}>\r\n          <Pie\r\n            dataKey=\"value\"\r\n            isAnimationActive={true}\r\n            data={nietos}\r\n            cx=\"50%\"\r\n            cy=\"50%\"\r\n            outerRadius={80}\r\n            fill=\"#8884d8\"\r\n            label\r\n          />\r\n          <Tooltip />\r\n        </PieChart>\r\n      </Row>\r\n      <Row>\r\n        <h6 style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          All reservation made verses completed reservations\r\n        </h6>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PieChartContent;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\Slide.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\StartingPage\\BarChartContent.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\AuthService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\ReservationService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\UpdateReservation.js",["361","362"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport classes from \"./UpdateReservation.module.css\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { service_type, timeArray, status } from \"./../../data\";\r\nimport { ReservationService } from \"./../../services/ReservationService\";\r\nimport { Formik } from \"formik\";\r\nimport { ClientService } from \"./../../services/ClientService\";\r\nimport { UserService } from \"./../../services/UserService\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { ReservationContext } from \"./../../store/reservation-context\";\r\n\r\nconst UpdateReservation = (props) => {\r\n  const [reservation, setReservationContext] = useContext(ReservationContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [clients, setClients] = useState([]);\r\n\r\n  const [users, setUser] = useState([]);\r\n\r\n  const [reservationInfo, setReservationInfo] = useState({\r\n    client_email: \"\",\r\n    service_type: \"\",\r\n    stylist_email: \"\",\r\n    reservation_date: \"\",\r\n    reservation_time: \"\",\r\n    reservation_status: \"\",\r\n  });\r\n\r\n  const ReservationDetailSearchID = async () => {\r\n    try {\r\n      const result = await ReservationService.reservationIDDetailsID(\r\n        props.reservationId\r\n      );\r\n\r\n      const info = {};\r\n\r\n      const reservationInfo = result;\r\n\r\n      info.client_email = reservationInfo.client_email;\r\n      info.service_type = reservationInfo.service_type;\r\n      info.stylist_email = reservationInfo.stylist_email;\r\n      info.reservation_date = reservationInfo.reservation_date;\r\n      info.reservation_time = reservationInfo.reservation_time;\r\n      info.reservation_status = reservationInfo.reservation_status;\r\n\r\n      setReservationInfo(info);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const ClientDetails = async () => {\r\n    try {\r\n      const result = await ClientService.clientDetails();\r\n\r\n      setClients(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const UserDetails = async () => {\r\n    try {\r\n      const result = await UserService.userDetails();\r\n\r\n      setUser(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const onSubmitForm = (values) => {\r\n    try {\r\n      ReservationService.reservationUpdate(\r\n        props.reservationId,\r\n        values.client_email,\r\n        values.service_type,\r\n        values.stylist_email,\r\n        values.reservation_date,\r\n        values.reservation_time,\r\n        values.reservation_status\r\n      );\r\n\r\n      ReservationDetails();\r\n      props.onUpdateReservationData();\r\n      NotificationManager.success(\r\n        \"Reservation Success Update\",\r\n        \"Success\",\r\n        \"Close after 15000ms\",\r\n        25000\r\n      );\r\n      handleClose();\r\n    } catch (err) {\r\n      NotificationManager.error(\r\n        \"Reservation Update Failed\",\r\n        \"error\",\r\n        \"Close after 15000ms\",\r\n        25000\r\n      );\r\n    }\r\n  };\r\n\r\n  const ReservationDetails = async () => {\r\n    try {\r\n      const result = await ReservationService.reservationDetails();\r\n\r\n      setReservationContext(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    ClientDetails();\r\n    UserDetails();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (props.reservationId === \"\") {\r\n    } else {\r\n      ReservationDetailSearchID();\r\n    }\r\n  }, [props.reservationId]);\r\n\r\n  return (\r\n    <Container>\r\n      <FontAwesomeIcon\r\n        icon={faPen}\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={handleOpen}\r\n      />\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box className={classes.auth}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n            textAlign=\"center\"\r\n          >\r\n            Update Reservation\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <section>\r\n              <Formik\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                  client_email: reservationInfo.client_email,\r\n                  service_type: reservationInfo.service_type,\r\n                  stylist_email: reservationInfo.stylist_email,\r\n                  reservation_date: reservationInfo.reservation_date,\r\n                  reservation_time: reservationInfo.reservation_time,\r\n                  reservation_status: reservationInfo.reservation_status,\r\n                }}\r\n                onSubmit={onSubmitForm}\r\n                // innerRef={formRef}\r\n              >\r\n                {({\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  /* and other goodies */\r\n                }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Client</label>\r\n                      <select\r\n                        name=\"client_email\"\r\n                        className=\"form-control\"\r\n                        id=\"selectClient\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.client_email}\r\n                      >\r\n                        <option value={\"\"}>Select Client</option>\r\n                        {clients.map((cli, index) => {\r\n                          return (\r\n                            <option key={cli._id} value={cli.email}>\r\n                              {cli.email}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Service Type</label>\r\n                      <select\r\n                        name=\"service_type\"\r\n                        className=\"form-control\"\r\n                        id=\"selectservice\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.service_type}\r\n                      >\r\n                        {service_type.map((service, index) => {\r\n                          return (\r\n                            <option key={service.id} value={service.title}>\r\n                              {service.title}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Select Date</label>\r\n                      <input\r\n                        type=\"date\"\r\n                        id=\"date_id\"\r\n                        name=\"reservation_date\"\r\n                        required\r\n                        value={values.reservation_date}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Select Time</label>\r\n                      <select\r\n                        name=\"reservation_time\"\r\n                        className=\"form-control\"\r\n                        id=\"reservation_time_id\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.reservation_time}\r\n                        disabled\r\n                      >\r\n                        {timeArray.map((time, index) => {\r\n                          return (\r\n                            <option key={time.id} value={time.time}>\r\n                              {time.time}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Stylist</label>\r\n                      <select\r\n                        name=\"stylist_email\"\r\n                        className=\"form-control\"\r\n                        id=\"stylist_id\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.stylist_email}\r\n                        disabled\r\n                      >\r\n                        {users.map((user, index) => {\r\n                          return (\r\n                            <option key={user._id} value={user.email}>\r\n                              {user.email}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"text\">Select Status</label>\r\n                      <select\r\n                        name=\"reservation_status\"\r\n                        className=\"form-control\"\r\n                        id=\"reservation_status_id\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.reservation_status}\r\n                      >\r\n                        {status.map((stat, index) => {\r\n                          return (\r\n                            <option key={stat.id} value={stat.title}>\r\n                              {stat.title}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div className={classes.actions}>\r\n                      <button>Update</button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </section>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateReservation;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Reservation\\DeleteReservation.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\ClientService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\services\\UserService.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\UpdateClient.js",["363","364"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Modal from \"@mui/material/Modal\";\r\nimport classes from \"./UpdateClient.module.css\";\r\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ClientService } from \"./../../services/ClientService\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport { Formik } from \"formik\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { ClientContext } from \"./../../store/client-context\";\r\n\r\nconst UpdateClient = (props) => {\r\n  const [clients, setClients] = useContext(ClientContext);\r\n  props.onUpdateClientData(false);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const [clientInfo, setClientInfo] = useState({\r\n    email: \"\",\r\n    fname: \"\",\r\n    lname: \"\",\r\n    phone_number: \"\",\r\n  });\r\n\r\n  const onSubmitForm = (values) => {\r\n    try {\r\n      ClientService.clientUpdate(\r\n        props.clientId,\r\n        values.fname,\r\n        values.lname,\r\n        values.phone_number,\r\n        values.email\r\n      );\r\n\r\n      ClientDetails();\r\n      props.onUpdateClientData(true);\r\n      NotificationManager.success(\r\n        \"Client Success Update\",\r\n        \"Success\",\r\n        \"Close after 25000ms\",\r\n        25000\r\n      );\r\n      handleClose();\r\n    } catch (err) {\r\n      NotificationManager.error(\r\n        \"Client Update Failed\",\r\n        \"error\",\r\n        \"Close after 15000ms\",\r\n        25000\r\n      );\r\n    }\r\n  };\r\n\r\n  const ClientDetailSearchID = async () => {\r\n    try {\r\n      const result = await ClientService.clientDetailsID(props.clientId);\r\n\r\n      const info = {};\r\n\r\n      const cliInfo = result;\r\n\r\n      info.email = cliInfo.email;\r\n      info.fname = cliInfo.fname;\r\n      info.lname = cliInfo.lname;\r\n      info.phone_number = cliInfo.phone_number;\r\n\r\n      setClientInfo(info);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.clientId === \"\") {\r\n    } else {\r\n      ClientDetailSearchID();\r\n    }\r\n  }, [props.clientId]);\r\n\r\n  const ClientDetails = async () => {\r\n    try {\r\n      const result = await ClientService.clientDetails();\r\n      setClients(result);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FontAwesomeIcon\r\n        icon={faPen}\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={handleOpen}\r\n      />\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box className={classes.auth}>\r\n          <Typography\r\n            id=\"modal-modal-title\"\r\n            variant=\"h6\"\r\n            component=\"h2\"\r\n            textAlign=\"center\"\r\n          >\r\n            Update Client\r\n          </Typography>\r\n          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n            <section>\r\n              <Formik\r\n                enableReinitialize={true}\r\n                initialValues={{\r\n                  email: clientInfo.email,\r\n                  fname: clientInfo.fname,\r\n                  lname: clientInfo.lname,\r\n                  phone_number: clientInfo.phone_number,\r\n                }}\r\n                onSubmit={onSubmitForm}\r\n                // innerRef={formRef}\r\n              >\r\n                {({\r\n                  values,\r\n                  errors,\r\n                  touched,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n                }) => (\r\n                  <form onSubmit={handleSubmit}>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"email\">Email</label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        required\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        value={values.email}\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                    {/* {errors.email && touched.email && errors.email} */}\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"fname\">First Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"fname\"\r\n                        name=\"fname\"\r\n                        required\r\n                        value={values.fname}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"password\">Last Name</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"text\"\r\n                        name=\"lname\"\r\n                        required\r\n                        value={values.lname}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n                    <div className={classes.control}>\r\n                      <label htmlFor=\"phonenumber\">Phone Number</label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"phone_number\"\r\n                        name=\"phone_number\"\r\n                        required\r\n                        value={values.phone_number}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className={classes.actions}>\r\n                      <button disabled={isSubmitting} type=\"submit\">\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                )}\r\n              </Formik>\r\n            </section>\r\n          </Typography>\r\n        </Box>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UpdateClient;\r\n","E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\ClientPage\\DeleteClient.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\config\\constants.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\store\\client-context.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\store\\reservation-context.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\test-porpose-fe\\src\\components\\Auth\\SignUp.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\store\\reservation-context.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\store\\client-context.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Auth\\SignUp.js",[],"E:\\React\\React 2nd Assigment\\Waruna_React_2nd_Assigment_git\\FrontEnd_Waruna\\src\\components\\Calender\\CalenderDragDrop.js",["365","366"],{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":23},{"ruleId":"371","severity":1,"message":"375","line":14,"column":19,"nodeType":"373","messageId":"374","endLine":14,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":35,"column":34,"nodeType":"378","messageId":"379","endLine":35,"endColumn":36},{"ruleId":"376","severity":1,"message":"377","line":37,"column":41,"nodeType":"378","messageId":"379","endLine":37,"endColumn":43},{"ruleId":"376","severity":1,"message":"377","line":39,"column":41,"nodeType":"378","messageId":"379","endLine":39,"endColumn":43},{"ruleId":"380","severity":1,"message":"381","line":37,"column":6,"nodeType":"382","endLine":37,"endColumn":20,"suggestions":"383"},{"ruleId":"371","severity":1,"message":"384","line":17,"column":10,"nodeType":"373","messageId":"374","endLine":17,"endColumn":17},{"ruleId":"371","severity":1,"message":"385","line":39,"column":13,"nodeType":"373","messageId":"374","endLine":39,"endColumn":21},{"ruleId":"380","severity":1,"message":"386","line":77,"column":6,"nodeType":"382","endLine":77,"endColumn":19,"suggestions":"387"},{"ruleId":"371","severity":1,"message":"385","line":23,"column":13,"nodeType":"373","messageId":"374","endLine":23,"endColumn":21},{"ruleId":"371","severity":1,"message":"388","line":26,"column":10,"nodeType":"373","messageId":"374","endLine":26,"endColumn":21},{"ruleId":"371","severity":1,"message":"389","line":33,"column":10,"nodeType":"373","messageId":"374","endLine":33,"endColumn":15},{"ruleId":"371","severity":1,"message":"385","line":58,"column":13,"nodeType":"373","messageId":"374","endLine":58,"endColumn":21},{"ruleId":"380","severity":1,"message":"390","line":115,"column":6,"nodeType":"382","endLine":115,"endColumn":34,"suggestions":"391"},{"ruleId":"380","severity":1,"message":"392","line":140,"column":6,"nodeType":"382","endLine":140,"endColumn":30,"suggestions":"393"},{"ruleId":"380","severity":1,"message":"394","line":36,"column":6,"nodeType":"382","endLine":36,"endColumn":25,"suggestions":"395"},{"ruleId":"371","severity":1,"message":"384","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":17},{"ruleId":"380","severity":1,"message":"396","line":81,"column":6,"nodeType":"382","endLine":81,"endColumn":22,"suggestions":"397"},{"ruleId":"371","severity":1,"message":"388","line":19,"column":10,"nodeType":"373","messageId":"374","endLine":19,"endColumn":21},{"ruleId":"380","severity":1,"message":"398","line":123,"column":6,"nodeType":"382","endLine":123,"endColumn":27,"suggestions":"399"},{"ruleId":"367","replacedBy":"400"},{"ruleId":"369","replacedBy":"401"},{"ruleId":"371","severity":1,"message":"375","line":14,"column":19,"nodeType":"373","messageId":"374","endLine":14,"endColumn":29},{"ruleId":"380","severity":1,"message":"394","line":36,"column":6,"nodeType":"382","endLine":36,"endColumn":25,"suggestions":"402"},{"ruleId":"371","severity":1,"message":"388","line":26,"column":10,"nodeType":"373","messageId":"374","endLine":26,"endColumn":21},{"ruleId":"371","severity":1,"message":"389","line":33,"column":10,"nodeType":"373","messageId":"374","endLine":33,"endColumn":15},{"ruleId":"371","severity":1,"message":"385","line":58,"column":13,"nodeType":"373","messageId":"374","endLine":58,"endColumn":21},{"ruleId":"380","severity":1,"message":"390","line":115,"column":6,"nodeType":"382","endLine":115,"endColumn":34,"suggestions":"403"},{"ruleId":"380","severity":1,"message":"392","line":140,"column":6,"nodeType":"382","endLine":140,"endColumn":30,"suggestions":"404"},{"ruleId":"380","severity":1,"message":"381","line":37,"column":6,"nodeType":"382","endLine":37,"endColumn":20,"suggestions":"405"},{"ruleId":"371","severity":1,"message":"384","line":17,"column":10,"nodeType":"373","messageId":"374","endLine":17,"endColumn":17},{"ruleId":"371","severity":1,"message":"385","line":39,"column":13,"nodeType":"373","messageId":"374","endLine":39,"endColumn":21},{"ruleId":"380","severity":1,"message":"386","line":77,"column":6,"nodeType":"382","endLine":77,"endColumn":19,"suggestions":"406"},{"ruleId":"371","severity":1,"message":"385","line":23,"column":13,"nodeType":"373","messageId":"374","endLine":23,"endColumn":21},{"ruleId":"376","severity":1,"message":"377","line":35,"column":34,"nodeType":"378","messageId":"379","endLine":35,"endColumn":36},{"ruleId":"376","severity":1,"message":"377","line":37,"column":41,"nodeType":"378","messageId":"379","endLine":37,"endColumn":43},{"ruleId":"376","severity":1,"message":"377","line":39,"column":41,"nodeType":"378","messageId":"379","endLine":39,"endColumn":43},{"ruleId":"371","severity":1,"message":"388","line":19,"column":10,"nodeType":"373","messageId":"374","endLine":19,"endColumn":21},{"ruleId":"380","severity":1,"message":"398","line":123,"column":6,"nodeType":"382","endLine":123,"endColumn":27,"suggestions":"407"},{"ruleId":"371","severity":1,"message":"384","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":17},{"ruleId":"380","severity":1,"message":"396","line":81,"column":6,"nodeType":"382","endLine":81,"endColumn":22,"suggestions":"408"},{"ruleId":"371","severity":1,"message":"388","line":37,"column":10,"nodeType":"373","messageId":"374","endLine":37,"endColumn":21},{"ruleId":"380","severity":1,"message":"394","line":54,"column":6,"nodeType":"382","endLine":54,"endColumn":12,"suggestions":"409"},"no-native-reassign",["410"],"no-negated-in-lhs",["411"],"no-unused-vars","'CalenderContent' is defined but never used.","Identifier","unusedVar","'setIsLogin' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'ClientDetails'. Either include it or remove the dependency array.","ArrayExpression",["412"],"'clients' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ClientDetailSearch'. Either include it or remove the dependency array.",["413"],"'reservation' is assigned a value but never used.","'users' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AvailableStylsitDetails'. Either include it or remove the dependency array.",["414"],"React Hook useEffect has a missing dependency: 'ReservationDetailSearch'. Either include it or remove the dependency array.",["415"],"React Hook useEffect has a missing dependency: 'ReservationDetails'. Either include it or remove the dependency array.",["416"],"React Hook useEffect has a missing dependency: 'ClientDetailSearchID'. Either include it or remove the dependency array.",["417"],"React Hook useEffect has a missing dependency: 'ReservationDetailSearchID'. Either include it or remove the dependency array.",["418"],["410"],["411"],["419"],["420"],["421"],["422"],["423"],["424"],["425"],["426"],"no-global-assign","no-unsafe-negation",{"desc":"427","fix":"428"},{"desc":"429","fix":"430"},{"desc":"431","fix":"432"},{"desc":"433","fix":"434"},{"desc":"435","fix":"436"},{"desc":"437","fix":"438"},{"desc":"439","fix":"440"},{"desc":"435","fix":"441"},{"desc":"431","fix":"442"},{"desc":"433","fix":"443"},{"desc":"427","fix":"444"},{"desc":"429","fix":"445"},{"desc":"439","fix":"446"},{"desc":"437","fix":"447"},{"desc":"448","fix":"449"},"Update the dependencies array to be: [ClientDetails, clientUpdate]",{"range":"450","text":"451"},"Update the dependencies array to be: [ClientDetailSearch, searchvalue]",{"range":"452","text":"453"},"Update the dependencies array to be: [AvailableStylsitDetails, onChangeDate, onChangeTime]",{"range":"454","text":"455"},"Update the dependencies array to be: [ReservationDetailSearch, reservationsearchvalue]",{"range":"456","text":"457"},"Update the dependencies array to be: [ReservationDetails, reservationUpdate]",{"range":"458","text":"459"},"Update the dependencies array to be: [ClientDetailSearchID, props.clientId]",{"range":"460","text":"461"},"Update the dependencies array to be: [ReservationDetailSearchID, props.reservationId]",{"range":"462","text":"463"},{"range":"464","text":"459"},{"range":"465","text":"455"},{"range":"466","text":"457"},{"range":"467","text":"451"},{"range":"468","text":"453"},{"range":"469","text":"463"},{"range":"470","text":"461"},"Update the dependencies array to be: [ReservationDetails, test]",{"range":"471","text":"472"},[1052,1066],"[ClientDetails, clientUpdate]",[2371,2384],"[ClientDetailSearch, searchvalue]",[3535,3563],"[AvailableStylsitDetails, onChangeDate, onChangeTime]",[4128,4152],"[ReservationDetailSearch, reservationsearchvalue]",[1254,1273],"[ReservationDetails, reservationUpdate]",[2254,2270],"[ClientDetailSearchID, props.clientId]",[3647,3668],"[ReservationDetailSearchID, props.reservationId]",[1254,1273],[3535,3563],[4128,4152],[1052,1066],[2371,2384],[3647,3668],[2254,2270],[1741,1747],"[ReservationDetails, test]"]